without_id:
  post:
    summary: Create User
    tags:
      - Users
    description: Api for create user
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of user
                required: true
                example: Truong Van Phong
              email:
                type: string
                description: Email of user
                required: true
                example: truongvanphong97@gmail.com
    responses:
      200:
        description: Successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Truong Van Phong
                    email:
                      type: string
                      example: truongvanphong97@gmail.com
                    created_at:
                      type: string
                      example: "2021-12-18T14:41:10.261725Z"
      400:
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: "../../definations/common.yaml#/errors_object"
            examples:
              name required:
                value:
                  success: false
                  errors:
                    - field: Name
                      message: Field Name is required.
              email invalid:
                value:
                  success: false
                  errors:
                    - field: Email
                      message: Field Email is invalid format.

  get:
    summary: Get List User
    tags:
      - Users
    description: Api for get list user
    parameters:
      - in: query
        name: page_id
        schema:
          type: integer
        required: true
        example: 1
      - in: query
        name: page_size
        schema:
          type: integer
        required: true
        example: 5
    responses:
      200:
        description: Successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: array
                  items:
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Truong Van Phong
                      email:
                        type: string
                        example: truongvanphong97@gmail.com
                      created_at:
                        type: string
                        example: "2021-12-18T14:41:10.261725Z"
      400:
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: "../../definations/common.yaml#/errors_object"
            examples:
              when page_id invalid:
                value:
                  success: false
                  errors:
                    - field: PageId
                      message: Field PageId is not valid.
              when page_size invalid:
                value:
                  success: false
                  errors:
                    - field: PageSize
                      message: Field PageSize is not valid.

with_id:
  get:
    summary: Get User
    tags:
      - Users
    description: Api for get user by id
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        example: 1
    responses:
      200:
        description: Successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Truong Van Phong
                    email:
                      type: string
                      example: truongvanphong97@gmail.com
                    created_at:
                      type: string
                      example: "2021-12-18T14:41:10.261725Z"
      400:
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: "../../definations/common.yaml#/errors_object"
            examples:
              when id required:
                value:
                  success: false
                  errors:
                    - field: Id
                      message: Field Id is required.
              when id invalid:
                value:
                  success: false
                  errors:
                    - field: Id
                      message: Field Id is not valid.
